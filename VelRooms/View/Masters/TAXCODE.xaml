<Page x:Class="HMS.View.Masters.TAXCODE"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:vm="clr-namespace:HMS.ViewModel"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:local="clr-namespace:HMS.View.Masters"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d"
      Height="500" Width="800" Background="White">
    <Page.Resources>
        <vm:data x:Key="Viewmodel"></vm:data>
        <!--<Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border Background="White" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White">
                                    <Image Name="im" Width="20">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="20" UriSource="/Images/error.png" />
                                        </Image.Source>
                                    </Image>
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style x:Key="placeholder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Background="Transparent"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#cecccc"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#354766"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkOrange" />
                </Trigger>
            </Style.Triggers>-->
        <!--
        </Style>-->
        <!--<Style TargetType="Label">
            <Setter Property="FontFamily" Value="Times New Roman"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="1"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="1"/>
        </Style>-->
    </Page.Resources>
    <material:Card Height="500" material:ShadowAssist.ShadowDepth="Depth4">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="19*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#354766">
                <TextBlock  Text="Tax Definition" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom"  Grid.ColumnSpan="2" FontFamily="Times New Roman" Background="#354766" Cursor="None" FontSize="20" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="327*"/>
                    <ColumnDefinition Width="473*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,36,0,414" HorizontalAlignment="Center">
                        <material:PackIcon Kind="Update" Height="25" Width="25"/>
                        <DatePicker TabIndex="0" DataContext="{Binding Source={StaticResource Viewmodel}}" Text="{Binding Path=Date, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" SelectedDateChanged="txtactivedate_SelectedDateChanged" Name="txtactivedate" Height="24"  Width="170" Margin="25,0,0,0"  material:HintAssist.Hint="Active Date" />
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,78,0,372" HorizontalAlignment="Center">
                        <material:PackIcon Kind="ViewModule" Height="25" Width="25" Margin="0,0,0,0"  />
                        <ComboBox TabIndex="1" Name="ComboBox1" Text="Front Office" Width="170" SelectedIndex="0" IsSynchronizedWithCurrentItem="True" Margin="25,0,0,0" Height="25" Padding="3" FontSize="14"  >
                            <ComboBoxItem x:Name="FRONTOFFICE" Content="Front Office" />
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,119,0,331" HorizontalAlignment="Center">
                        <material:PackIcon Kind="CodeArray" Height="25" Width="25" Margin="0,0,0,0"  />
                        <TextBox TabIndex="2" Name="txttaxcode" Padding="1,-9,0,0" DataContext="{Binding Source={StaticResource Viewmodel}}" Text="{Binding Path=ID, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="170" Margin="25,0,0,0" LostFocus="txttaxcode_LostFocus" material:HintAssist.Hint="HSN Code*" material:HintAssist.IsFloating="True" />
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,160,0,290" HorizontalAlignment="Center">
                        <material:PackIcon Kind="RenameBox" Height="25" Width="25"/>
                        <TextBox TabIndex="3" Margin="25,0,0,0" Name="ComboBox2"   Width="170" Height="25"  DataContext="{Binding Source={StaticResource Viewmodel}}" Text="{Binding Path=Name, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  material:HintAssist.Hint="Tax Name*" material:HintAssist.IsFloating="True" Padding="1,-9,0,0" >
                        </TextBox>
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,199,0,251" HorizontalAlignment="Center">
                        <material:PackIcon Kind="Cash" Height="25" Width="25"/>
                        <TextBox TabIndex="4" Name="txtfromamount" MaxLength="9" Padding="1,-9,0,0" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path= Amount, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="170" Margin="25,0,0,0" material:HintAssist.Hint="From Amount*" material:HintAssist.IsFloating="True"  />
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,240,0,210" HorizontalAlignment="Center">
                        <material:PackIcon Kind="CashMultiple" Height="25" Width="25"/>
                        <TextBox TabIndex="5" Name="txttoamount" LostFocus="txttoamount_LostFocus" MaxLength="9" Padding="1,-9,0,0" Width="170" Margin="25,0,0,0"  DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Toamount, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" material:HintAssist.Hint="To Amount*" material:HintAssist.IsFloating="True"/>
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,284,0,166" HorizontalAlignment="Center">
                        <material:PackIcon Kind="BarcodeScan" Height="25" Width="25"/>
                        <ComboBox TabIndex="6" Margin="25,0,0,0" Name="ComboBox3" Text="Percentage" SelectedIndex="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="170" Height="23.5" Padding="2" IsSynchronizedWithCurrentItem="True"  >
                            <ComboBoxItem Content="Percentage"></ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,327,0,123" HorizontalAlignment="Center">
                        <material:PackIcon Kind="Percent" Height="25" Width="25"/>
                        <TextBox TabIndex="7" Name="txtfactor" Width="170" Padding="1,-9,0,0" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Percentage, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="25,0,0,0" material:HintAssist.Hint="Percentage*" material:HintAssist.IsFloating="True" ></TextBox>
                    </StackPanel>
                    <StackPanel Height="25" Orientation="Horizontal" Margin="0,372,0,78" HorizontalAlignment="Center">
                        <material:PackIcon Kind="Emoticon" Height="25" Width="25"/>
                        <ComboBox TabIndex="8" Margin="25,0,0,0" Name="ComboBox4" SelectedIndex="0" HorizontalAlignment="Left" Width="170" IsSynchronizedWithCurrentItem="True"  >
                            <ComboBoxItem Name="ACTIVE" Content="Active" ></ComboBoxItem>
                            <ComboBoxItem Name="INACTIVE" Content="In-Active" ></ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <!--<Button x:Name="modify" Width="100"  Margin="7,427.5,220,15.5" Content="Modify"  FontSize="15" Click="modify_Click" />-->
                    <StackPanel Orientation="Horizontal" Height="35" Margin="0,416,0,24" HorizontalAlignment="Center">
                        <Button x:Name="Clear" Width="90" Content="Clear" FontSize="15" Margin="0,0,50,0" Click="Clear_Click"/>
                        <Button x:Name="save" TabIndex="9" IsDefault="True" Width="90" Content="Save" FontSize="15" Click="save_Click"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1">
                    <DataGrid Margin="0,10,10,10"  BorderBrush="Black" BorderThickness="1" Name="dgtax" MouseLeftButtonUp="dgtax_MouseLeftButtonUp" CanUserAddRows="False" AutoGenerateColumns="False" LoadingRow="dgtax_LoadingRow_1" >
                        <DataGrid.Columns>
                            <!--<DataGridTextColumn Header="id" Width="55"  IsReadOnly="True" Binding="{Binding AlternationIndex, RelativeSource={RelativeSource AncestorType=DataGridRow}}"/>-->
                            <!--<DataGridTextColumn Header="SNO" Binding="{Binding id}"/>-->
                            <DataGridTextColumn Header="SNO" Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridRow}},Path=Header}"/>
                            <DataGridTextColumn Header="Tax Name" Width="100" Binding="{Binding TAX_NAME}"/>
                            <DataGridTextColumn Header="HSN Code" Width="100" Binding="{Binding TAX_CODE}"/>
                            <DataGridTextColumn Header="From Amount" Width="100" Binding="{Binding FROM_AMOUNT}"/>
                            <DataGridTextColumn Header="To Amount" Width="100" Binding="{Binding TO_AMOUNT}"/>
                            <DataGridTextColumn Header="%" Width="100" Binding="{Binding FACTOR}"/>
                            <DataGridTextColumn Header="Status" Width="100" Binding="{Binding STATUS}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
                <Popup Name="pop1" Height="150" Width="280" Placement="Center">
                    <material:Card Height="150" Width="280" material:ShadowAssist.ShadowDepth="Depth4" Background="#FFD72323" Foreground="White">
                        <Border BorderThickness="1" BorderBrush="#FFDE1F16">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal" Width="280" Margin="0,15,0,0">
                                    <Viewbox Width="35" Height="35" Margin="55,0,0,0">
                                        <Canvas Width="24" Height="24">
                                            <Path Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" Fill="White" />
                                        </Canvas>
                                    </Viewbox>
                                    <Label Content="Cannot save the data" Height="35" Padding="5,0,0,6" VerticalContentAlignment="Bottom" FontSize="15" Foreground="White"></Label>
                                </StackPanel>
                                <Label Content="Please fill out all fields" Width="280" HorizontalContentAlignment="Center" Padding="5,0,0,0" Height="30" FontSize="15" Foreground="White"></Label>
                                <Button Width="100" Background="White" BorderThickness="0" FontWeight="Bold" Foreground="#FFD72323" Height="30" Content="OK" FontSize="15" Click="Button_Click" Margin="0,10,0,0"></Button>
                            </StackPanel>
                        </Border>
                    </material:Card>
                </Popup>
                <Popup Name="pop2" Height="100" Width="200" Placement="Center">
                    <Border Background="White" BorderThickness="1" BorderBrush="Green" >
                        <StackPanel Height="100">
                            <Label Name="insert" Content="" FontSize="18" Width="170" Margin="0,10,0,0"></Label>
                            <Button Width="80" Height="25" Content="Ok" Name="insertpop" FontSize="15" Click="insertpop_Click"  Margin="0,20,0,0"></Button>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
    </material:Card>
</Page>
