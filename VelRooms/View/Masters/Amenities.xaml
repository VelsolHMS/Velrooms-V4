<Page x:Class="HMS.View.Masters.Amenities"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HMS.View.Masters"
      xmlns:vm ="clr-namespace:HMS.ViewModel"
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      Height="450"
      Title="Amenities" Width="800" Background="White" >

    <Page.Resources>
        <vm:data x:Key="Viewmodel"></vm:data>
        <!--<Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border Background="White" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White">
                                    <Image Width="20">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="20" UriSource="/Images/error.png" />
                                        </Image.Source>
                                    </Image>
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style x:Key="placeholder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template" >
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Background="Transparent"
                                 Panel.ZIndex="2"  />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#cecccc"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Cursor" Value="Arrow"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->


        <!--<Style TargetType="Button">
            <Setter Property="Background" Value="#354766"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="DarkOrange" />

                </Trigger>
            </Style.Triggers>

        </Style>-->
        <!--<Style TargetType="Label">
            <Setter Property="FontFamily" Value="Times New Roman"/>
        </Style>-->
    </Page.Resources>
    <material:Card Height="450" material:ShadowAssist.ShadowDepth="Depth4">
        <Grid x:Name="grid" >
            <!--<Grid.CommandBindings>
            <CommandBinding Command="New" CanExecute="pop1_CanExecute" Executed="pop1_Executed" />
            </Grid.CommandBindings>-->
            <Grid.RowDefinitions>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="91*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Background="#354766">
                <TextBlock Height="30" Text="Amenities Definition" Foreground="White" Padding="0,0,0,0" FontFamily="Times New Roman"  HorizontalAlignment="Center"  VerticalAlignment="Bottom" FontSize="20" />
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="460"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <StackPanel Height="25" Margin="0,17.975,0,281.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="Codepen" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <TextBox Name="txtamenitycode"  Cursor="Arrow" TabIndex="0" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=ACode,NotifyOnValidationError=True, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}"  GotFocus="txtamenitycode_GotFocus" LostFocus="txtamenitycode_LostFocus" KeyUp="txtamenitycode_KeyUp" TextChanged="txtamenitycode_TextChanged" Margin="49,0,0,0" Padding="1,-9,0,0" Width="150" material:HintAssist.Hint="Amenitie Code*" material:HintAssist.IsFloating="True"  />
                        <ListBox Visibility="Hidden"  Grid.ZIndex="3" Grid.Row="1" Grid.Column="1" Name="li"  SelectedValuePath="Key" ItemsSource="{Binding AMENITY_CODE}" DisplayMemberPath="AMENITY_CODE" Margin="25,3.985,0,268.973" SelectionChanged="list_SelectionChanged"  HorizontalAlignment="Left" Width="150"/>
                    </StackPanel>
                    <StackPanel Height="25" Margin="0,61.975,0,237.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="RenameBox" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <TextBox MaxLength="22" Cursor="Arrow" Margin="48,-1,0,0" TabIndex="1" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=AName,NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" KeyUp="txtamenityname_KeyUp" LostFocus="txtamenityname_LostFocus" GotFocus="txtamenityname_GotFocus" Name="txtamenityname"   TextChanged="txtamenityname_TextChanged" Width="150" Padding="1,-5,0,0" material:HintAssist.Hint="Name*" material:HintAssist.IsFloating="True"   />
                        <ListBox Visibility="Hidden" Name="list" SelectedValuePath="Key" ItemsSource="{Binding NAME}" DisplayMemberPath="NAME" SelectionChanged="list_SelectionChanged"   Panel.ZIndex="3" Margin="46,10.016,172,233.947" Grid.Row="1" />
                        <!--Text="{Binding SelectedItem.NAME, ElementName=list }"-->
                    </StackPanel>
                    <StackPanel Height="25" Margin="0,105.975,0,193.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="ContentSaveOutline" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <TextBox Name="txtdescription" MaxLength="25" Margin="48,0,0,0" TabIndex="2" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Description,NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Width="150" Padding="1,-9,0,0" material:HintAssist.Hint="Description" material:HintAssist.IsFloating="True"/>
                    </StackPanel>
                    <StackPanel Height="25" Margin="0,146.975,0,152.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="CashMultiple" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <TextBox Name="txtprice" Grid.Row="1" TabIndex="3" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Amount, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"   Width="148.013" Margin="48,0,0,0" Padding="1,-9,0,0" material:HintAssist.Hint="Price*" material:HintAssist.IsFloating="True" />
                    </StackPanel>
                    <StackPanel Height="25" Margin="0,190.975,0,108.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="AccountNetwork" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <TextBox Name="txtreportingname" MaxLength="18" TabIndex="4" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Reportname, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}"  Width="149.28" Margin="48,0,0,0" Padding="1,-9,0,0" material:HintAssist.Hint="Reporting Name" material:HintAssist.IsFloating="True" />
                    </StackPanel>
                    <StackPanel Height="25" Margin="0,236.975,0,62.975"  Orientation="Horizontal">
                        <material:PackIcon  Kind="Emoticon" Height="24" Width="19"  Margin="60,0,0,0"/>
                        <ComboBox Name="status"  Margin="48,0,0,0" Padding="2" TabIndex="5" Width="150" SelectedIndex="0" Height="25">
                            <ComboBoxItem Content="Active"></ComboBoxItem>
                            <ComboBoxItem Content="Inactive"></ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Height="35" HorizontalAlignment="Center" Margin="65,292.6,65,0">
                        <!--<Button x:Name="modify" FontSize="15"  Click="modify_Click" VerticalAlignment="Bottom"  Width="80" Margin="87,0,233,8" Content="Modify" />-->
                        <Button x:Name="clear" FontSize="15"  Click="clear_Click" Content="Clear" Margin="0,0,50,0" Width="80"  />
                        <Button x:Name="save" FontSize="15" TabIndex="6" IsDefault="True" Click="save_Click" HorizontalAlignment="Left" Content="Save" Width="80"/>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="1" >
                    <DataGrid Name="Dgamenity" Margin="0,10,10,10" BorderBrush="Black" BorderThickness="1" CanUserResizeColumns="False" AutoGenerateColumns="False" MouseLeftButtonUp="Dgamenity_MouseLeftButtonUp" CanUserAddRows="False" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="60" Header="Code" Binding="{Binding AMENITY_CODE }"/>
                            <DataGridTextColumn Width="120" Header="Name" Binding="{Binding  AMENITY_NAME }" />
                            <DataGridTextColumn Width="80" Header="Price" Binding="{Binding AMOUNT}"/>
                            <DataGridTextColumn Width="120" Header="ReportingName" Binding="{Binding REPORTING_NAME}"/>
                            <DataGridTextColumn Width="80" Header="Status" Binding="{Binding STATUS }" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </Grid>
            <Popup Name="pop1" Width="300" Height="180" Placement="Center">
                <material:Card Background="#EF513A" Width="300" Height="180" material:ShadowAssist.ShadowDepth="Depth4">
                    <StackPanel>
                        <StackPanel Height="50" Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="Missing Fields" FontSize="25" FontFamily="Calibri" Foreground="White" Margin="0,10,0,10" Padding="0,0,0,0"/>
                        </StackPanel>
                        <StackPanel Height="120" Margin="10,0,10,0" Background="White">
                            <StackPanel Orientation="Horizontal">
                                <Viewbox Width="35" Height="35" Margin="15,10,10,0">
                                    <Canvas Width="24" Height="24">
                                        <Path Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" Fill="#EF513A" />
                                    </Canvas>
                                </Viewbox>
                                <TextBlock Text="Please fill all Fields !" FontSize="20" Margin="0,15,0,0" TextAlignment="Center" FontFamily="Calibri"/>
                            </StackPanel>
                            <Button HorizontalAlignment="Center" Width="100" Click="Button_Click"  Foreground="#EF513A" FontSize="17" Background="White" BorderThickness="1" BorderBrush="#EF513A" Content="OK" FontWeight="Bold" Margin="0,20,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </material:Card>
            </Popup>
            <Popup Name="pop2" Placement="Center" Margin="51,2.774,51,225.191" Grid.Row="1">
                <Border Background="White" BorderThickness="1" BorderBrush="Green" >
                    <StackPanel Height="100">
                        <Label Name="insert" Content="" FontSize="18" Width="170" Margin="0,10,0,0"></Label>
                        <Button Width="80" Height="25" Content="Ok" Name="insertpop" FontSize="15" Click="insertpop_Click"  Margin="0,20,0,0"></Button>
                    </StackPanel>
                </Border>
            </Popup>
        </Grid>
    </material:Card>
</Page>

<!-- page done by - last modified by sai 27-11-2017 /surya 16-11-2017-->