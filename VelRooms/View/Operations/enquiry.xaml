<Page x:Class="HMS.View.Operations.enquiry"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:HMS.View.Operations"
      xmlns:material="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:vm="clr-namespace:HMS.ViewModel"
      mc:Ignorable="d" 
      Height="608" Width="900" Background="White"
      Title="enquiry">
    <Page.Resources>
        <vm:data x:Key="Viewmodel"></vm:data>
        <!--<Style TargetType="Button">
            <Setter Property="Background" Value="#354766"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontFamily" Value="Times New Roman"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkOrange" />

                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="Times New Roman"/>
        </Style>
        <!--<Style x:Key="leftpanestyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontFamily" Value="Georige"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style TargetType="{x:Type TextBox}">

            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True" Name="errordock">
                            <Border Background="White" DockPanel.Dock="Right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                                    ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold" Foreground="White">
                                    <Image Name="im" Width="20">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="20" UriSource="/Images/error.png" />
                                        </Image.Source>
                                    </Image>
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="placeholder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Background="Transparent"
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="#cecccc"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </Page.Resources>
    <material:Card Height="608" material:ShadowAssist.ShadowDepth="Depth3">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="73*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#354766">
                <TextBlock  Text="Room Enquiry" Foreground="White" FontSize="18" Margin="0,0,0,0" FontFamily="Times New Roman"  HorizontalAlignment="Center" VerticalAlignment="Bottom"   />
            </Grid>
            <Grid Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="133*"/>
                        <ColumnDefinition Width="167*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,14,0,545">
                            <material:PackIcon Kind="Pen" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox  Name="txtenquiryno" Width="150" Margin="45,0,0,0" Padding="0,0,0,0" VerticalAlignment="Bottom" Height="24" IsReadOnly="True"  >
                            </TextBox>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,60,0,499">
                            <material:PackIcon Kind="Account" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox Name="txtname" Margin="45,0,0,0" Padding="1,-5,0,0"  DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Name, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  Width="150" material:HintAssist.Hint="Name" material:HintAssist.IsFloating="True"></TextBox>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,102,0,457">
                            <material:PackIcon Kind="Phone" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox Name="txtcontact" Margin="45,0,0,0" Padding="1,-5,0,0"  Width="150"  DataContext="{Binding Source={StaticResource Viewmodel}}" MaxLength="10" Validation.Error="Validation_Error" Text="{Binding Path=Mobilenumber, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  material:HintAssist.Hint="Phone" material:HintAssist.IsFloating="True"></TextBox>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,149,0,410">
                            <material:PackIcon Kind="MapMarker" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox Name="txtcomingfrom" Width="150"  Padding="1,-7,0,0" Margin="45,0,0,0"  material:HintAssist.Hint="Coming From" material:HintAssist.IsFloating="True"></TextBox>
                        </StackPanel>
                        <Separator Margin="0,186,0,377" Foreground="{x:Null}" Background="#FFD8D8D8"/>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,214,0,345">
                            <material:PackIcon Kind="Door" Height="25" Width="24" Margin="100,0,0,0"/>
                            <ComboBox Name="cbroomtype" DisplayMemberPath="ROOM_CATEGORY" Width="150" Padding="1,-5,0,0" Height="25" SelectedIndex="0" Margin="45,0,0,0" VerticalAlignment="Top" material:HintAssist.Hint="Room Type" material:HintAssist.IsFloating="True"/>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,260,0,299">
                            <material:PackIcon Kind="DoorOpen" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox Name="txtrooms" Padding="1,-5,0,0" Width="150" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Number, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="45,0,0,0" VerticalAlignment="Top" material:HintAssist.Hint="No of Rooms" Height="25" material:HintAssist.IsFloating="True"/>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,306,0,253">
                            <material:PackIcon Kind="HumanMaleFemale" Height="25" Width="24" Margin="100,0,0,0"/>
                            <TextBox Name="txtpax"  Padding="1,-6,0,0" Width="150" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Number1, NotifyOnValidationError=True, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="45,0,0,0" VerticalAlignment="Top" Height="25" material:HintAssist.Hint="No of Pax's" material:HintAssist.IsFloating="True"/>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,350,0,209">
                            <material:PackIcon Kind="Calendar" Height="25" Width="24" Margin="100,0,0,0"/>
                            <DatePicker Name="txtdate" Width="150" Margin="45,-10,0,0"  SelectedDateChanged="txtdate_SelectedDateChanged" DataContext="{Binding Source={StaticResource Viewmodel}}" Validation.Error="Validation_Error" Text="{Binding Path=Date, NotifyOnValidationError=True,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged}" material:HintAssist.Hint="Arrival Date" material:HintAssist.IsFloating="True" Padding="2,5,0,5" ></DatePicker>
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,392,0,167">
                            <material:PackIcon Kind="Timer" Height="25" Width="24" Margin="100,0,0,0"/>
                            <material:TimePicker Name="txttime"   Padding="0,-11,0,0"  Width="150"  Margin="45,0,0,0" LostFocus="txttime_LostFocus" material:HintAssist.Hint="Arrival Time" material:HintAssist.IsFloating="True"></material:TimePicker>
                        </StackPanel>
                        <Button Width="100" Margin="250,525.5,49,26.5" Content="Save" Name="Save" FontSize="15"  Click="Button_Click"/>
                        <Button Width="100" Margin="83,525.5,216,26.5" Content="Clear" Name="Clear" FontSize="15"  Click="Button_Click_2"/>
                    </Grid>
                    <Grid Grid.Column="1">
                        <!--<StackPanel Height="25" Orientation="Horizontal" Margin="0,13.5,0,545.5">
                            <material:PackIcon Kind="AccountSearch" Height="25" Width="27" Margin="300,0,0,0"/>
                            <TextBox Width="150" Margin="10,0,0,0" material:HintAssist.Hint="Auto Search" material:HintAssist.IsFloating="True" Padding="1,-5,0,0" />
                        </StackPanel>-->
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,13.5,0,545.5">
                            <material:PackIcon Kind="AccountSearch" Height="25" Width="27" Margin="300,0,0,0"/>
                            <TextBox Name="txtsearch"  Width="152" Margin="10,0,0,0" material:HintAssist.Hint="AutoSearch" material:HintAssist.IsFloating="True" Padding="1,-5,0,0" LostFocus="txtsearch_LostFocus" />
                        </StackPanel>
                        <StackPanel Height="25" Orientation="Horizontal" Margin="0,52.5,0,506.5">
                            <material:PackIcon Kind="CalendarCheck" Height="25" Width="27" Margin="10,0,0,0"/>
                            <DatePicker Name="date" Width="150" Margin="12,0,0,0" material:HintAssist.Hint="From Date" LostFocus="date_LostFocus" />
                            <material:PackIcon Kind="CalendarCheck" Height="25" Width="27" Margin="100,0,0,0"/>
                            <DatePicker Name="date1" Width="150" Margin="12,0,0,0" material:HintAssist.Hint="To Date" />
                        </StackPanel>
                        <Button Name="btnsearch" Content="Search by Date" Margin="361,98.5,13,453.5" Click="btnsearch_Click"/>
                        <DataGrid Name="dg" IsReadOnly="True" AutoGenerateColumns="False" VerticalScrollBarVisibility="Hidden" Margin="5,135.5,5,5" BorderBrush="Black"  BorderThickness="1" MouseLeftButtonUp="dg_MouseLeftButtonUp" CanUserAddRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Enquiry Id" Binding="{Binding ENQUIRY_ID}" Width="100"></DataGridTextColumn>
                                <DataGridTextColumn Header="Name" Binding="{Binding NAME}" Width="100"></DataGridTextColumn>
                                <DataGridTextColumn Header="Contact" Binding="{Binding CONTACT}" Width="100"></DataGridTextColumn>
                                <DataGridTextColumn Header="Expected Arrival Date" Binding="{Binding EXPECTED_ARRIVAL_DATE, StringFormat=dd/MM/yyyy}" Width="150"></DataGridTextColumn>
                                <DataGridTextColumn Header="Expected Pax" Binding="{Binding EXPECTED_PAX}"></DataGridTextColumn>
                                <DataGridTextColumn Header="No of Rooms" Binding="{Binding EXPECTED_ROOMS}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Popup Name="pop1" Width="300" Height="180" Placement="Center">
                            <material:Card Background="#EF513A" Width="300" Height="180" material:ShadowAssist.ShadowDepth="Depth4">
                                <StackPanel>
                                    <StackPanel Height="50" Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="Missing Fields" FontSize="25" FontFamily="Calibri" Foreground="White" Margin="0,10,0,10" Padding="0,0,0,0"/>
                                    </StackPanel>
                                    <StackPanel Height="120" Margin="10,0,10,0" Background="White">
                                        <StackPanel Orientation="Horizontal">
                                            <Viewbox Width="35" Height="35" Margin="15,10,10,0">
                                                <Canvas Width="24" Height="24">
                                                    <Path Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" Fill="#EF513A" />
                                                </Canvas>
                                            </Viewbox>
                                            <TextBlock Text="Please fill all Fields !" FontSize="20" Margin="0,15,0,0" TextAlignment="Center" FontFamily="Calibri"/>
                                        </StackPanel>
                                        <Button HorizontalAlignment="Center" Width="100" Name="ok" Click="ok_Click"  Foreground="#EF513A" FontSize="17" Background="White" BorderThickness="1" BorderBrush="#EF513A" Content="OK" FontWeight="Bold" Margin="0,20,0,0"/>
                                    </StackPanel>
                                </StackPanel>
                            </material:Card>
                        </Popup>
                        <Popup Name="pop2" Height="100" Width="200" Placement="Center">
                            <material:Card Height="100" Width="200" >
                                <StackPanel Height="100">
                                    <Label Name="insert" Content="Inserted Successfully!" FontSize="18" Width="170" Margin="0,10,0,0"></Label>
                                    <Button Width="80" Height="25" Content="Ok" Name="insertpop" FontSize="15" Click="insertpop_Click"  Margin="0,20,0,0"></Button>
                                </StackPanel>
                            </material:Card>
                        </Popup>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </material:Card>
</Page>
